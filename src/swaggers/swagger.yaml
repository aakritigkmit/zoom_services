openapi: 3.0.0
info:
  title: ZoomCar
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: Authentication
  - name: User
  - name: Car
  - name: Bookings
  - name: Transactions
paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: aakriti@gkmit.co
                password: '12345678'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/logout:
    delete:
      tags:
        - Authentication
      summary: logout
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            B
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjFiZmRmZmUyLTc3Y2MtNDg0YS05NzFmLWRiMDY3MjVkYzU2YSIsInJvbGUiOiJDdXN0b21lciIsImlhdCI6MTczMjExODU2NywiZXhwIjoxNzMyMjA0OTY3fQ.VN9xzj2bIB1C9wzbznqlh18po9GhMI7fcB9PjG_FIhA
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/send-otp:
    post:
      tags:
        - Authentication
      summary: send-otp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: arorakishore44@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/verify-otp:
    post:
      tags:
        - Authentication
      summary: verify-otp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: arorakishowe98@gmail.com
                otp: '653290'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/register:
    post:
      tags:
        - Authentication
      summary: register-user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Kishowe
                email: arorakishowe98@gmail.com
                phoneNumber: '9129670901'
                password: '12345678'
                city: udaipur
      responses:
        '200':
          description: Successful response
          content:
           application/json: {}

  
  paths:
  /users/:
    post:
      tags:
        - User
      summary: Create a new user by Admin
      description: Admin can create a new user by providing the necessary details.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "kiore"
                email:
                  type: string
                  example: "kiore215@gmail.com"
                phoneNumber:
                  type: string
                  example: "9212506566"
                password:
                  type: string
                  example: "12348678"
                roles:
                  type: array
                  items:
                    type: string
                    example: "Customer"
                city:
                  type: string
                  example: "Delhi"
      responses:
        '200':
          description: User successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "b3c0d470-6d44-431b-b1fc-1cf5b5c5e1ad"
                  name:
                    type: string
                    example: "kiore"
                  email:
                    type: string
                    example: "kiore215@gmail.com"
                  phoneNumber:
                    type: string
                    example: "9212506566"
                  roles:
                    type: array
                    items:
                      type: string
                    example: ["Customer"]
                  city:
                    type: string
                    example: "Delhi"
        '400':
          description: Invalid request body or missing parameters
        '401':
          description: Unauthorized access (Admin role required)
          content:
            application/json: {}
  /users/{id}:
    get:
      tags:
        - User
      summary: Fetch user details by ID
      description: Fetch user details by providing the user ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: "b3c0d470-6d44-431b-b1fc-1cf5b5c5e1ad"
      responses:
        '200':
          description: Successfully fetched user details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "b3c0d470-6d44-431b-b1fc-1cf5b5c5e1ad"
                  name:
                    type: string
                    example: "kiore"
                  email:
                    type: string
                    example: "kiore215@gmail.com"
                  phoneNumber:
                    type: string
                    example: "9212506566"
                  roles:
                    type: array
                    items:
                      type: string
                    example: ["Customer"]
                  city:
                    type: string
                    example: "Delhi"
        '404':
          description: User not found
          content:
            application/json: {}

  /users/{id}/bookings:
    get:
      tags:
        - User
      summary: Fetch bookings by user ID
      description: Fetch bookings made by a specific user by providing the user ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: "b3c0d470-6d44-431b-b1fc-1cf5b5c5e1ad"
      responses:
        '200':
          description: Successfully fetched user bookings
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookings:
                    type: array
                    items:
                      type: object
                      properties:
                        bookingId:
                          type: string
                          example: "7e54e3e8-89c9-4b0e-b4d1-ff619eff0e61"
                        carId:
                          type: string
                          example: "d7135720-6d1b-485e-bb7d-9a7d7ef47de2"
                        startDate:
                          type: string
                          example: "2024-11-23T10:00:00Z"
                        endDate:
                          type: string
                          example: "2024-11-24T10:00:00Z"
        '404':
          description: No bookings found for user
          content:
            application/json: {}

  /users/{id}/transactions:
    get:
      tags:
        - User
      summary: Fetch transactions by user ID
      description: Fetch transactions made by a specific user by providing the user ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            example: "b3c0d470-6d44-431b-b1fc-1cf5b5c5e1ad"
      responses:
        '200':
          description: Successfully fetched user transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        transactionId:
                          type: string
                          example: "e9a5e3a5-bb3b-4e5d-b1f2-17cd39cc607a"
                        amount:
                          type: number
                          example: 2000
                        status:
                          type: string
                          example: "Successful"
        '404':
          description: No transactions found for user
          content:
            application/json: {}
  /users/me:
    get:
      tags:
        - User
      summary: Fetch the authenticated user's details
      description: Fetch the details of the authenticated user.
      responses:
        '200':
          description: Successfully fetched the user's details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "b3c0d470-6d44-431b-b1fc-1cf5b5c5e1ad"
                  name:
                    type: string
                    example: "kiore"
                  email:
                    type: string
                    example: "kiore215@gmail.com"
                  phoneNumber:
                    type: string
                    example: "9212506566"
                  roles:
                    type: array
                    items:
                      type: string
                    example: ["Customer"]
                  city:
                    type: string
                    example: "Delhi"
        '401':
          description: Unauthorized access (User not logged in)
          content:
           application/json: {}
  paths:          
  /users/me:
    put:
      tags:
        - User
      summary: Update the authenticated user's details
      description: Update the details of the authenticated user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Aakriti"
                email:
                  type: string
                  example: "aakriti@gkmit.co"
                phoneNumber:
                  type: string
                  example: "7827634288"
                city:
                  type: string
                  example: "ajmer"
      responses:
        '200':
          description: Successfully updated the user's details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "b3c0d470-6d44-431b-b1fc-1cf5b5c5e1ad"
                  name:
                    type: string
                    example: "Aakriti"
                  email:
                    type: string
                    example: "aakriti@gkmit.co"
                  phoneNumber:
                    type: string
                    example: "7827634288"
                  city:
                    type: string
                    example: "ajmer"
        '400':
          description: Invalid request body or missing parameters
        '401':
          description: Unauthorized access (User not logged in)
        '404':
          description: User not found
        content:
          application/json: {}
  paths:        
  /transactions/:
    post:
      tags:
        - Transactions
      summary: create-Transactions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                booking_id: 9dc62a5c-e444-411b-a217-1086dbb8a33a
                user_id: e4e2d523-e7e1-4e6a-9a67-3e2d84a461dc
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            B
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjllZjRjM2E5LTMwOWEtNGQxZC1iZTRhLTU3MGZhOTZhZDc4MCIsInJvbGUiOiJBZG1pbiIsImlhdCI6MTczMjE2OTQzOSwiZXhwIjoxNzMyMjU1ODM5fQ.vVbK1fUFRxxRFUU2NHBDMfSmnOLk4pIG8DliUoliOCk
      responses:
        '200':
          description: Successful response
          content:
          application/json: {}
  paths:        
  /transactions/:
    get:
      tags:
        - Transactions
      summary: fetchAll
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjllZjRjM2E5LTMwOWEtNGQxZC1iZTRhLTU3MGZhOTZhZDc4MCIsInJvbGUiOiJBZG1pbiIsImlhdCI6MTczMTc4MTk1MSwiZXhwIjoxNzMxODY4MzUxfQ.IDeAP1XeaRxEU8ujFwL2I29_v2CBAczwZDGJK5sk3FM
      responses:
        '200':
          description: Successful response
          content:
          application/json: {}
  paths:          
  /transcations/{id}:
    get:
      tags:
        - Transactions
      summary: fetchTransactionByID
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            B
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjllZjRjM2E5LTMwOWEtNGQxZC1iZTRhLTU3MGZhOTZhZDc4MCIsInJvbGUiOiJBZG1pbiIsImlhdCI6MTczMjE1NDU5MiwiZXhwIjoxNzMyMjQwOTkyfQ.eOBb0hvIshBhtXsjY5GYKwkbLhiGhr4zgkDOip2MxvQ
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: 6356ac2e-b774-4990-adfc-6185cd0c228f
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  paths:
  /bookings/{id}:
    delete:
      tags:
        - Transactions
      summary: RemoveTransactions
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  paths:          
  /cars/{id}:          
    patch:
      tags:
        - Car
      summary: status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: unavailable
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImVlNDAyNWVhLWQ0ZGEtNDIxOS04OTc2LTcyYjA2YmRjNjUyZiIsInJvbGUiOiJDYXIgT3duZXIiLCJpYXQiOjE3MzE4NDc3NTQsImV4cCI6MTczMTkzNDE1NH0.Y8XldhBv3jTMxZjij0AdBKIFrnUxgMreR__Uv4M4YtI
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /cars:
    post:
      tags:
        - Car
      summary: Add a new car to the system
      operationId: addCar
      security:
        - bearerAuth: []
      requestBody:
        description: Car details
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  example: "Verna"
                year:
                  type: integer
                  example: 2024
                fuel_type:
                  type: string
                  example: "petrol"
                city:
                  type: string
                  example: "Udaipur"
                latitude:
                  type: number
                  format: float
                  example: 24.6040
                longitude:
                  type: number
                  format: float
                  example: 73.7091
                price_per_km:
                  type: number
                  example: 25
                price_per_hr:
                  type: number
                  example: 190
                chassis_number:
                  type: string
                  example: "108825894385553"
                type:
                  type: string
                  example: "mini car"
                image:
                  type: string
                  format: binary
                status:
                  type: string
                  example: "available"
      responses:
        '201':
          description: Car added successfully
        '400':
          description: Invalid car details
        '401':
          description: Unauthorized - Invalid token
        '500':
          description: Internal server error
        content:
          application/json: {} 
  /cars/list:
    get:
      tags:
        - Car
      summary: List all cars
      operationId: listCars
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    model:
                      type: string
                      example: "Verna"
                    year:
                      type: integer
                      example: 2024
                    fuel_type:
                      type: string
                      example: "petrol"
                    city:
                      type: string
                      example: "Udaipur"
                    price_per_km:
                      type: number
                      example: 25
                    price_per_hr:
                      type: number
                      example: 190
        '401':
          description: Unauthorized - Invalid token
        '500':
          description: Internal server error
          content:
            application/json: {}
             
  paths:          
  /transcations/{id}:       
  put:
      tags:
        - Bookings
      summary: UpdateBookings
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: c67cd646-cce5-4ea2-9806-fd2d64460896
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  paths:          
  /cars/{id}/bookings:
    get:
      tags:
        - Car
      summary: fetchCarBookings
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            B
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjllZjRjM2E5LTMwOWEtNGQxZC1iZTRhLTU3MGZhOTZhZDc4MCIsInJvbGUiOiJBZG1pbiIsImlhdCI6MTczMjE1NjIwOCwiZXhwIjoxNzMyMjQyNjA4fQ.zgO9oacPOF86TZDIvYFKUL4F7YZMVJ_pMAWo9Hc6yOo
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: acb3ebad-7af4-4104-89eb-5c8c0078576e
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  paths:          
  /users/{id}/transactions:
    get:
      tags:
        - User
      summary: fetchUsersTransactions
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: e4e2d523-e7e1-4e6a-9a67-3e2d84a461dc
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/me:
    get:
      tags:
        - User
      summary: me
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/me:          
    put:
      tags:
        - Users
      summary: me-update-detail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Aakriti
                email: aakriti@gkmit.co
                phoneNumber: '7827634288'
                city: agra
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{id}:
    put:
      tags:
        - User
      summary: me-update-detail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Aakriti
                email: aakriti@gkmit.co
                phoneNumber: '7827634288'
                city: ajmer
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bookings/summary:
    get:
      tags:
        - Bookings
      summary: getMonthlyBookings
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjllZjRjM2E5LTMwOWEtNGQxZC1iZTRhLTU3MGZhOTZhZDc4MCIsInJvbGUiOiJBZG1pbiIsImlhdCI6MTczMTczMjM2NSwiZXhwIjoxNzMxODE4NzY1fQ.MZ8uOBnMzhUnFvSKypcX65OZEK4xi7xNAuVSBlIudFs
        - name: year
          in: query
          schema:
            type: integer
          example: '2024'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bookings/details:
    get:
      tags:
        - Bookings
      summary: AllBookings
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjBlYzIxMWY1LTRmY2EtNGY3MC1iNTAyLTIzNzA4NjdkMWUyYSIsInJvbGUiOiJDdXN0b21lciIsImlhdCI6MTczMjM1ODQyMCwiZXhwIjoxNzMyNDQ0ODIwfQ.YQgakrnjefrPEMC7h9_fMglA5SfjRG79LYRH8oJD_aI
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bookings/download:
    get:
      tags:
        - Bookings
      summary: download
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            B
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjllZjRjM2E5LTMwOWEtNGQxZC1iZTRhLTU3MGZhOTZhZDc4MCIsInJvbGUiOiJBZG1pbiIsImlhdCI6MTczMjE2OTQzOSwiZXhwIjoxNzMyMjU1ODM5fQ.vVbK1fUFRxxRFUU2NHBDMfSmnOLk4pIG8DliUoliOCk
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /{id}:
    patch:
      tags:
        - Bookings
      summary: updateFeedback&CancelByAction
      requestBody:
        content: {}
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}



